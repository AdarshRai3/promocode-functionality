package com.promocode_functionality.promocode_functionality.dtos;

import jakarta.validation.constraints.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.math.BigDecimal;
import java.time.LocalDateTime;

@Data
@AllArgsConstructor
@NoArgsConstructor
public class PromocodeRequest {

    @NotBlank(message = "Code cannot be blank")
    @Size(max = 10, message = "Code must be at most 10 characters")
    private String code;

    @NotNull(message = "Expiry date cannot be null")
    @Future(message="Not a Valid Expiry Date, you can only put future dates")
    private LocalDateTime expiry_date;

    @NotBlank(message = "Status must be specified")
    @Pattern(regexp = "^(Active|Inactive)$", message = "Status must be either 'Active' or 'Inactive'")
    private String status;

    @NotNull(message = "Discount percent cannot be null")
    @Min(value = 0, message = "Discount percent must be greater than 0")
    @Max(value =100, message = "Discount percent must be lesser than 100")
    private Integer discountPercent;

    @NotBlank(message = "Code type cannot be blank")
    @Pattern(regexp = "^(Regular|Referral)$", message = "Generated by must be either 'Regular' or 'Referral'")
    private String code_type;

    @NotBlank(message = "Generated by must be specified")
    @Pattern(regexp = "^(System|Admin)$", message = "Generated by must be either 'System' or 'Admin'")
    private String generated_By;

    private Integer maxUsageLimit;
}
